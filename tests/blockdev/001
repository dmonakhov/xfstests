#! /bin/bash
# FS QA Test 001
#
# Regression test for fix https://lkml.org/lkml/2017/3/22/789
# Page cache should be dropped after successful discard
#
#-----------------------------------------------------------------------
# Copyright (c) 2017 Dmitry Monakhov <dmonakhov@openvz.org>
# All Rights Reserved.
#
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License as
# published by the Free Software Foundation.
#
# This program is distributed in the hope that it would be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write the Free Software Foundation,
# Inc.,  51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
#-----------------------------------------------------------------------
#

seq=`basename $0`
seqres=$RESULT_DIR/$seq
echo "QA output created by $seq"

here=`pwd`
tmp=/tmp/$$
status=1	# failure is the default!
trap "_cleanup; exit \$status" 0 1 2 3 15


_cleanup()
{
	cd /
	rm -f $tmp.*
}

# get standard environment, filters and checks
. ./common/rc
. ./common/filter
. ./common/scsi_debug

# remove previous $seqres.full before test
rm -f $seqres.full

# real QA test starts here
_supported_fs generic
_supported_os Linux
_require_scsi_debug
_require_command $BLKDISCARD_PROG blkdiscard


# Create virtual device with unmap_zeroes_data support
dev=$(_get_scsi_debug_dev 512 512 0 32 "lbpws=1 lbpws10=1")

# Initialize data with known pattern
$XFS_IO_PROG -c "pwrite -S 0xaa -b 2M 0 32M -w" -d $dev >>$seqres.full 2>&1 || \
    _fail "pwrite failed"

# Fill page cache with dirty data
$XFS_IO_PROG -c "pwrite -S 0xbb -b 2M 2M 10M" -f $dev >>$seqres.full 2>&1 || \
    _fail "pwrite failed"

$BLKDISCARD_PROG $dev
# After device was fully discarded, read sould return all zeroes
dd if=$dev bs=4k  2>>$seqres.full | hexdump
dd if=$dev bs=4M iflag=direct 2>>$seqres.full | hexdump
# success, all done
status=0
exit
